{"version":3,"sources":["Components/Beer/index.tsx","Components/Food/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Beer","useState","beers","setBeers","beerSection","showBeerSection","useEffect","axios","get","then","resposta","data","className","onClick","map","item","src","image_url","alt","name","tagline","description","id","Foods","categorias","setCategorias","categoria","setCategoria","comidas","setComidas","textoDigitado","setTextoDigitado","categories","meals","type","placeholder","onChange","event","target","value","strCategory","undefined","length","strMealThumb","strMeal","idMeal","App","Food","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAuCeA,EAnCF,WAAO,IAAD,EAEWC,mBAAsB,IAFjC,mBAERC,EAFQ,KAEDC,EAFC,OAGwBF,qBAHxB,mBAGRG,EAHQ,KAGKC,EAHL,KAKfC,qBAAU,WACNC,IAAMC,IAAN,gDACKC,MAAK,SAAAC,GAAQ,OAAIP,EAASO,EAASC,WACzC,IAIH,OACI,sBAAKC,UAAU,2BAAf,UAEI,kDAEA,wBAAQC,QAPH,WAAQR,GAAiBD,IAO9B,8BAECA,GAAe,mCACZ,qBAAMQ,UAAU,aAAhB,SACKV,EAAMY,KAAI,SAACC,GAAD,OACP,sBAAKH,UAAU,OAAf,UACI,qBAAKI,IAAKD,EAAKE,UAAWC,IAAKH,EAAKI,OACpC,6BAAKJ,EAAKI,OACV,+BAAOJ,EAAKK,UACZ,gCAAQL,EAAKM,gBAJUN,EAAKO,eC0CzCC,EA/DD,WAAO,IAAD,EACoBtB,mBAAmB,IADvC,mBACTuB,EADS,KACGC,EADH,OAEkBxB,qBAFlB,mBAETyB,EAFS,KAEEC,EAFF,OAGc1B,mBAAoB,IAHlC,mBAGT2B,EAHS,KAGAC,EAHA,OAI0B5B,qBAJ1B,mBAIT6B,EAJS,KAIMC,EAJN,KAuBhB,OAhBAzB,qBAAU,WACNC,IAAMC,IAAN,0DACKC,MAAK,SAAAC,GAAQ,OAAIe,EAAcf,EAASC,KAAKqB,iBACnD,IAEH1B,qBAAU,WACNC,IAAMC,IAAN,+DAAkEkB,IAC7DjB,MAAK,SAAAC,GAAQ,OAAImB,EAAWnB,EAASC,KAAKsB,YAChD,CAACP,IAEJpB,qBAAU,WACNC,IAAMC,IAAN,+DAAkEsB,IAC7DrB,MAAK,SAAAC,GAAQ,OAAImB,EAAWnB,EAASC,KAAKsB,YAChD,CAACH,IAIA,sBAAKlB,UAAU,2BAAf,UACI,iDACA,2FAEI,uBAAOsB,KAAK,OAAOC,YAAY,qBAAqBC,SAAU,SAACC,GAAD,OAAWN,EAAiBM,EAAMC,OAAOC,aAG3G,6BACKf,EAAWV,KAAI,SAACC,GAAD,OACZ,oBAAkBF,QAAS,kBAAMc,EAAaZ,EAAKyB,cAAnD,SAAkEzB,EAAKyB,aAA9DzB,EAAKO,cAILmB,IAAdf,GAAyC,OAAZE,GAC5B,+BAAKA,EAAQc,OAAb,8BAGaD,IAAdf,GAAyC,OAAZE,GAC5B,qCACI,oDAAsB,mCAASF,EAAT,UACtB,+BAAKE,EAAQc,OAAb,4BAGR,qBAAK9B,UAAU,iBAAf,SACiB,OAAZgB,GACGA,EAAQd,KAAI,SAACC,GAAD,OAER,sBAAKH,UAAU,YAAf,UACI,qBAAKI,IAAKD,EAAK4B,eACf,4BAAI5B,EAAK6B,YAFmB7B,EAAK8B,iBCxC9CC,MAVf,WACE,OACE,sBAAKlC,UAAU,MAAf,UACE,cAACmC,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5a84a7d7.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BeersList } from '../../Types/BeersList';\r\n\r\nconst Beer = () => {\r\n\r\n    const [beers, setBeers] = useState<BeersList[]>([])\r\n    const [beerSection, showBeerSection] = useState<Boolean>()\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.punkapi.com/v2/beers/?per_page=8`)\r\n            .then(resposta => setBeers(resposta.data))\r\n    }, [])\r\n\r\n    const show = () => { showBeerSection(!beerSection) }\r\n\r\n    return (\r\n        <div className=\"food-beer-list food-shop\">\r\n\r\n            <h1>Tipos de Cerveja</h1>\r\n\r\n            <button onClick={show}>Mostrar Cervejas</button>\r\n\r\n            {beerSection && <>\r\n                < div className=\"beers-list\">\r\n                    {beers.map((item: BeersList) => (\r\n                        <div className=\"beer\" key={item.id}>\r\n                            <img src={item.image_url} alt={item.name} />\r\n                            <h3>{item.name}</h3>\r\n                            <span>{item.tagline}</span>\r\n                            <small>{item.description}</small>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Beer;","/* eslint-disable jsx-a11y/alt-text */\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Comidas } from '../../Types/FoodList';\r\n\r\nconst Foods = () => {\r\n    const [categorias, setCategorias] = useState<String[]>([])\r\n    const [categoria, setCategoria] = useState<String>()\r\n    const [comidas, setComidas] = useState<Comidas[]>([])\r\n    const [textoDigitado, setTextoDigitado] = useState<String>()\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://www.themealdb.com/api/json/v1/1/categories.php`)\r\n            .then(resposta => setCategorias(resposta.data.categories))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${categoria}`)\r\n            .then(resposta => setComidas(resposta.data.meals))\r\n    }, [categoria])\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${textoDigitado}`)\r\n            .then(resposta => setComidas(resposta.data.meals))\r\n    }, [textoDigitado])\r\n\r\n\r\n    return (\r\n        <div className=\"food-beer-list food-shop\">\r\n            <h1>Tipos de pratos</h1>\r\n            <p>\r\n                Selecione uma categoria ou digite a comida (em inglÃªs):\r\n                <input type=\"text\" placeholder=\"Digite a comida...\" onChange={(event) => setTextoDigitado(event.target.value)} />\r\n            </p>\r\n\r\n            <ul>\r\n                {categorias.map((item: any) => (\r\n                    <li key={item.id} onClick={() => setCategoria(item.strCategory)}>{item.strCategory}</li>\r\n                ))}\r\n            </ul>\r\n\r\n            {((categoria === undefined) && (comidas !== null)) && (\r\n                <h2>{comidas.length} pratos encontrados</h2>\r\n            )}\r\n\r\n            {((categoria !== undefined) && (comidas !== null)) && (\r\n                <>\r\n                    <h2>Tipo selecionado: <strong>{categoria} </strong></h2>\r\n                    <h2>{comidas.length} pratos encontrados</h2></>\r\n            )\r\n            }\r\n            <div className=\"food-container\">\r\n                {comidas !== null && (\r\n                    comidas.map((item: Comidas) => (\r\n\r\n                        <div className=\"food-item\" key={item.idMeal}>\r\n                            <img src={item.strMealThumb} />\r\n                            <p>{item.strMeal}</p>\r\n                        </div>\r\n                    ))\r\n                )\r\n                }\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Foods;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Beer from './Components/Beer'\r\nimport Food from './Components/Food'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Food />\r\n      <Beer />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}